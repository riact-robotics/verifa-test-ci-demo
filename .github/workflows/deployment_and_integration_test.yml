name: Run Deployment and Integration Tests

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  run-release:
    runs-on: ubuntu-latest
    continue-on-error: true # for demo placeholders
    steps:
      - name: Check out this repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.RIACT_CROSS_REPO_CLONE_TOKEN }}

      - name: pull pre-deployed release image
        run: docker pull ghcr.io/riact-robotics/wip-debian_release_package/pre-deployed-release-image:latest

      - name: start pre-deployed release image
        run: docker run -d --name release-image ghcr.io/riact-robotics/wip-debian_release_package/pre-deployed-release-image:latest
        
      - name: test deployment running
        run: |
          docker exec riactor start
          docker exec riview start
          docker exec grep "successful start" | if grep not empty then return 0, else 1
        
  deploy-new-component:
    needs: run-release 
    runs-on: ubuntu-latest
    continue-on-error: true # for demo placeholders
    steps:
      - name: "placeholder: overwrite old component in release with testing candidate"
        run: docker cp $GITHUB_WORKSPACE opt/riact/riact_riflex_release/$CURRENT_REPO
        
      - name: "placeholder: perform neccessary build/compile steps on the new component"
        run: docker exec colcon build opt/riact/riact_riflex_release/$CURRENT_REPO


  run-deployment-test:
    needs: deploy-new-component 
    runs-on: ubuntu-latest
    continue-on-error: true # for demo placeholders
    steps:
      - name: "placeholder: Run deployment test"
        run: |
          docker exec riactor restart
          docker exec riview restart
          docker exec grep "successful start" | if grep not empty then return 0, else 1

  run-integration-test:
    needs: run-deployment-test 
    runs-on: ubuntu-latest
    continue-on-error: true # for demo placeholders
    steps:
      - name: "placeholder: Run integration test"
        run: |
          docker exec cd opt/riact/riact_riflex_release
          docker exec pytest ./src/riact_std_skills

  build-new-release:
    needs: run-integration-test 
    runs-on: ubuntu-latest
    continue-on-error: true # for demo placeholders
    if: github.ref == 'refs/heads/master'
    steps:
      - name: "placeholder: push new release to ci-release branch"
        run: docker exec git push opt/riact/riact_riflex_release origin ci-release
        
      - name: "placeholder: trigger new build & push workflow in wip-debian_release_package"
        run: "trigger with repository_dispatch to wip-debian_release_packages workflow for rebuilding the release image, or just have the same workflow here"
